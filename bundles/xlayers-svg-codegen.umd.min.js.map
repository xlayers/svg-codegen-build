{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@xlayers/svg-codegen/lib/svg-context.service.ts","ng://@xlayers/svg-codegen/lib/svg-aggregator.service.ts","ng://@xlayers/svg-codegen/lib/svg-parser.service.ts","ng://@xlayers/svg-codegen/lib/svg-codegen.service.ts","ng://@xlayers/svg-codegen/lib/svg-codegen.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","SvgContextService","identify","current","includes","of","svg","put","newContext","clear","Injectable","args","providedIn","SvgAggregatorService","formatService","svgContext","aggregate","options","context","kind","language","renderFile","paths","offset","uri","normalizeName","name","_this","tslib_1.__spread","generateXmlAttribute","join","map","path","indent","type","attributes","generateXmlHeaderAttribute","frame","width","toFixed","height","xmlNamespace","FormatService","SvgParserService","shape","style","layerService","symbolService","compute","data","visit","walk","layers","forEach","layer","visitSymbol","force","visitContent","symbolMaster","lookup","visitShapePath","visitShapeGroup","visitTriangleShape","config","borders","thickness","color","parseColorAsHex","origin","parsePoint","points","point","segments","slice","curvePoint","curveFrom","curveTo","currPoint","x","y","unshift","isClosed","fillStyle","extractFillStyle","console","log","obj","fills","firstFill","isEnabled","parseColorAsRgba","ShapeService","StyleService","LayerService","SymbolService","SvgCodeGenService","svgParser","svgAggretatorService","compileOptions","SvgCodeGenModule","NgModule","imports","SketchLibModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SvgCodeGenContext } from './svg-codegen';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SvgContextService {\r\n  identify(current: SketchMSLayer) {\r\n    return ['triangle', 'shapePath'].includes(current._class as string);\r\n  }\r\n\r\n  of(current: SketchMSLayer) {\r\n    return (current as any).svg;\r\n  }\r\n\r\n  put(current: SketchMSLayer, newContext: SvgCodeGenContext) {\r\n    (current as any).svg = { ...this.of(current), ...newContext };\r\n  }\r\n\r\n  clear(current: SketchMSLayer) {\r\n    delete (current as any).svg;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormatService } from '@xlayers/sketch-lib';\r\nimport { SvgContextService } from './svg-context.service';\r\nimport { SvgCodeGenOptions, SvgCodeGenContextPath } from './svg-codegen';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SvgAggregatorService {\r\n  constructor(\r\n    private readonly formatService: FormatService,\r\n    private svgContext: SvgContextService\r\n  ) {}\r\n\r\n  aggregate(current: SketchMSLayer, options: SvgCodeGenOptions) {\r\n    const context = this.svgContext.of(current);\r\n    return [\r\n      {\r\n        kind: 'svg',\r\n        language: 'svg',\r\n        value: this.renderFile(current, context.paths, context.offset, options),\r\n        uri: `${this.formatService.normalizeName(current.name)}.svg`\r\n      }\r\n    ];\r\n  }\r\n\r\n  private renderFile(\r\n    current: SketchMSLayer,\r\n    paths: SvgCodeGenContextPath[],\r\n    offset: number,\r\n    options: SvgCodeGenOptions\r\n  ) {\r\n    const attributes = this.generateXmlAttribute(current, offset, options);\r\n    const openTag = ['<svg', ...attributes].join(' ');\r\n    return `\\\r\n${openTag}>\r\n${paths\r\n  .map(path =>\r\n    this.formatService.indent(1, `<${path.type} ${path.attributes.join(' ')}/>`)\r\n  )\r\n  .join('\\n')}\r\n</svg>`;\r\n  }\r\n\r\n  private generateXmlAttribute(\r\n    current: SketchMSLayer,\r\n    offset: number,\r\n    options: SvgCodeGenOptions\r\n  ) {\r\n    return [\r\n      ...this.generateXmlHeaderAttribute(options),\r\n      `width=\"${(current.frame.width + offset * 2).toFixed(2)}\"`,\r\n      `height=\"${(current.frame.height + offset * 2).toFixed(2)}\"`\r\n    ];\r\n  }\r\n\r\n  private generateXmlHeaderAttribute(options: SvgCodeGenOptions) {\r\n    return options.xmlNamespace\r\n      ? [\r\n          'version=\"1.1\"',\r\n          `xmlns=\"http://www.w3.org/2000/svg\"`,\r\n          `xmlns:xlink=\"http://www.w3.org/1999/xlink\"`\r\n        ]\r\n      : [];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LayerService, ShapeService, SymbolService } from '@xlayers/sketch-lib';\r\nimport { StyleService } from '@xlayers/sketch-lib';\r\n\r\nimport { SvgCodeGenOptions } from './svg-codegen';\r\nimport { SvgContextService } from './svg-context.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SvgParserService {\r\n  constructor(\r\n    private shape: ShapeService,\r\n    private style: StyleService,\r\n    private readonly layerService: LayerService,\r\n    private readonly symbolService: SymbolService,\r\n    private svgContext: SvgContextService\r\n  ) {}\r\n\r\n  compute(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: SvgCodeGenOptions\r\n  ) {\r\n    this.visit(current, data, options);\r\n  }\r\n\r\n  private walk(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: SvgCodeGenOptions\r\n  ) {\r\n    if (this.layerService.identify(current)) {\r\n      current.layers.forEach(layer => {\r\n        this.visit(layer, data, options);\r\n      });\r\n    } else if (this.symbolService.identify(current)) {\r\n      this.visitSymbol(current, data, options);\r\n    }\r\n  }\r\n\r\n  private visit(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: SvgCodeGenOptions\r\n  ) {\r\n    if (options.force) {\r\n      this.svgContext.clear(current);\r\n    }\r\n    if (this.svgContext.identify(current)) {\r\n      if (!this.svgContext.of(current)) {\r\n        this.visitContent(current);\r\n      }\r\n    }\r\n    this.walk(current, data, options);\r\n  }\r\n\r\n  private visitSymbol(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: SvgCodeGenOptions\r\n  ) {\r\n    const symbolMaster = this.symbolService.lookup(current, data);\r\n    if (symbolMaster) {\r\n      this.compute(symbolMaster, data, options);\r\n    }\r\n  }\r\n\r\n  private visitContent(current: SketchMSLayer) {\r\n    switch (current._class as string) {\r\n      case 'shapePath':\r\n        this.visitShapePath(current);\r\n        break;\r\n\r\n      case 'shapeGroup':\r\n        this.visitShapeGroup(current);\r\n        break;\r\n\r\n      case 'triangle':\r\n        this.visitTriangleShape(current);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private visitShapePath(current: SketchMSLayer) {\r\n    const config = [];\r\n    let offset = 0;\r\n\r\n    // TODO: Support multiple border\r\n    if (\r\n      current.style.borders &&\r\n      current.style.borders.length > 0 &&\r\n      current.style.borders[0].thickness\r\n    ) {\r\n      config.push(`stroke-width=\"${current.style.borders[0].thickness}\"`);\r\n      const color = this.style.parseColorAsHex(current.style.borders[0].color);\r\n\r\n      config.push(`stroke=\"${color}\"`);\r\n      offset = current.style.borders[0].thickness;\r\n    }\r\n\r\n    // TODO: move to @types/sketchapp\r\n    const origin = this.shape.parsePoint(\r\n      (current as any).points[0].point,\r\n      offset,\r\n      current\r\n    );\r\n    const segments = (current as any).points.slice(1).map(curvePoint => {\r\n      const curveFrom = this.shape.parsePoint(\r\n        curvePoint.curveFrom,\r\n        offset,\r\n        current\r\n      );\r\n      const curveTo = this.shape.parsePoint(\r\n        curvePoint.curveTo,\r\n        offset,\r\n        current\r\n      );\r\n      const currPoint = this.shape.parsePoint(\r\n        curvePoint.point,\r\n        offset,\r\n        current\r\n      );\r\n      if (curveTo.x === curveFrom.x && curveTo.y === curveFrom.y) {\r\n        return `L ${currPoint.x} ${currPoint.y}`;\r\n      }\r\n      return `S ${curveTo.x} ${curveTo.y}, ${currPoint.x} ${currPoint.y}`;\r\n    });\r\n\r\n    segments.unshift(`M${origin.x} ${origin.y}`);\r\n\r\n    if ((current as any).isClosed) {\r\n      segments.push('z');\r\n    }\r\n    const fillStyle = this.extractFillStyle(current);\r\n\r\n    this.svgContext.put(current, {\r\n      offset,\r\n      paths: [\r\n        { type: 'path', attributes: [...config, fillStyle, `d=\"${segments}\"`] }\r\n      ]\r\n    });\r\n  }\r\n\r\n  private visitTriangleShape(current: SketchMSLayer) {\r\n    const config = [];\r\n    let offset = 0;\r\n\r\n    // TODO: Support multiple border\r\n    if (\r\n      current.style.borders &&\r\n      current.style.borders.length > 0 &&\r\n      current.style.borders[0].thickness\r\n    ) {\r\n      config.push(`stroke-width=\"${current.style.borders[0].thickness / 2}\"`);\r\n      const color = this.style.parseColorAsHex(current.style.borders[0].color);\r\n      config.push(`stroke=\"${color}\"`);\r\n      offset = current.style.borders[0].thickness;\r\n    }\r\n\r\n    const segments = (current as any).points\r\n      .map(curvePoint => {\r\n        const currPoint = this.shape.parsePoint(\r\n          curvePoint.point,\r\n          offset / 2,\r\n          current\r\n        );\r\n        return `${currPoint.x}, ${currPoint.y}`;\r\n      })\r\n      .join(' ');\r\n\r\n    const fillStyle = this.extractFillStyle(current);\r\n\r\n    this.svgContext.put(current, {\r\n      offset,\r\n      paths: [\r\n        {\r\n          type: 'polygon',\r\n          attributes: [...config, fillStyle, `points=\"${segments}\"`]\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  private visitShapeGroup(current: SketchMSLayer) {\r\n    console.log(current);\r\n    const offset = 0;\r\n    const paths = current.layers.map(layer => {\r\n      // TODO: move to @types/sketchapp\r\n      const origin = this.shape.parsePoint(\r\n        (layer as any).points[0].point,\r\n        offset,\r\n        layer\r\n      );\r\n      const segments = (layer as any).points.slice(1).map(curvePoint => {\r\n        const curveFrom = this.shape.parsePoint(\r\n          curvePoint.curveFrom,\r\n          offset,\r\n          layer\r\n        );\r\n        const curveTo = this.shape.parsePoint(\r\n          curvePoint.curveTo,\r\n          offset,\r\n          layer\r\n        );\r\n        const currPoint = this.shape.parsePoint(\r\n          curvePoint.point,\r\n          offset,\r\n          layer\r\n        );\r\n        if (curveTo.x === curveFrom.x && curveTo.y === curveFrom.y) {\r\n          return `L ${layer.frame.x + currPoint.x} ${layer.frame.y +\r\n            currPoint.y}`;\r\n        }\r\n        return `S ${layer.frame.x + curveTo.x} ${layer.frame.y +\r\n          curveTo.y}, ${layer.frame.x + currPoint.x} ${layer.frame.y +\r\n          currPoint.y}`;\r\n      });\r\n\r\n      segments.unshift(\r\n        `M${layer.frame.x + origin.x} ${layer.frame.y + origin.y}`\r\n      );\r\n\r\n      // TODO: isClosed to type\r\n      if ((layer as any).isClosed) {\r\n        segments.push('z');\r\n      }\r\n\r\n      return segments.join(' ');\r\n    });\r\n\r\n    const fillStyle = this.extractFillStyle(current);\r\n\r\n    this.svgContext.put(current, {\r\n      offset,\r\n      paths: [\r\n        { type: 'path', attributes: [fillStyle, `d=\"${paths.join(' ')}\"`] }\r\n      ]\r\n    });\r\n  }\r\n\r\n  private extractFillStyle(current: SketchMSLayer) {\r\n    const obj = (current as any).style.fills;\r\n\r\n    if (obj && obj.length > 0) {\r\n      // we only support one fill: take the first one!\r\n      // ignore the other fills\r\n      const firstFill = obj[0];\r\n\r\n      if (firstFill.isEnabled) {\r\n        const fillColor = this.style.parseColorAsRgba(firstFill.color);\r\n\r\n        return `fill=\"${fillColor}\"`;\r\n      }\r\n    }\r\n\r\n    return 'fill=\"none\"';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SvgContextService } from './svg-context.service';\r\nimport { SvgAggregatorService } from './svg-aggregator.service';\r\nimport { SvgParserService } from './svg-parser.service';\r\nimport { SvgCodeGenOptions } from './svg-codegen';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SvgCodeGenService {\r\n  constructor(\r\n    private svgContext: SvgContextService,\r\n    private svgParser: SvgParserService,\r\n    private svgAggretatorService: SvgAggregatorService\r\n  ) {}\r\n\r\n  compute(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options?: SvgCodeGenOptions\r\n  ) {\r\n    this.svgParser.compute(current, data, this.compileOptions(options));\r\n  }\r\n\r\n  aggregate(current: SketchMSLayer, options?: SvgCodeGenOptions) {\r\n    return this.svgAggretatorService.aggregate(\r\n      current,\r\n      this.compileOptions(options)\r\n    );\r\n  }\r\n\r\n  identify(current: SketchMSLayer) {\r\n    return this.svgContext.identify(current);\r\n  }\r\n\r\n  context(current: SketchMSLayer) {\r\n    return this.svgContext.of(current);\r\n  }\r\n\r\n  private compileOptions(options: SvgCodeGenOptions) {\r\n    return {\r\n      xmlNamespace: true,\r\n      ...options\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SketchLibModule } from '@xlayers/sketch-lib';\r\n\r\n@NgModule({\r\n  imports: [SketchLibModule]\r\n})\r\nexport class SvgCodeGenModule {}\r\n"]}